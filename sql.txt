CREATE TABLE asset (
	asset_ID INT PRIMARY KEY AUTO_INCREMENT,
	asset VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE severity (
	severity_ID INT PRIMARY KEY AUTO_INCREMENT,
	severity VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE incident_type (
	incident_type_ID INT PRIMARY KEY AUTO_INCREMENT,
	incident_type VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE user_role (
    user_role_ID INT PRIMARY KEY AUTO_INCREMENT,
    role VARCHAR(255) NOT NULL
);


CREATE TABLE user (
    user_ID INT PRIMARY KEY AUTO_INCREMENT,
    user_role_ID INT NOT NULL,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    salt VARCHAR(255),
    FOREIGN KEY (user_role_ID) REFERENCES user_role(user_role_ID),
    UNIQUE (username),
    UNIQUE (email)
);

CREATE TABLE incident (
	incident_ID INT PRIMARY KEY AUTO_INCREMENT,
	incident_type_ID INT,
	severity_ID INT,
	user_ID INT,
	description TEXT,
	created TIMESTAMP,
	FOREIGN KEY (incident_type_ID) REFERENCES incident_type(incident_type_ID)
	ON DELETE RESTRICT
	ON UPDATE CASCADE,
	FOREIGN KEY (severity_ID) REFERENCES severity(severity_ID)
	ON DELETE RESTRICT
	ON UPDATE CASCADE,
	FOREIGN KEY (user_ID) REFERENCES user(user_ID)
	ON DELETE RESTRICT
	ON UPDATE CASCADE
);

CREATE TABLE browser (
    browser_ID INT PRIMARY KEY AUTO_INCREMENT,
    browser VARCHAR(255) NOT NULL
);


CREATE TABLE page (
    page_ID INT PRIMARY KEY AUTO_INCREMENT,
    page VARCHAR(255) NOT NULL
);


CREATE TABLE visit_tracking (
    visit_ID int PRIMARY KEY AUTO_INCREMENT,
    page_ID INT NOT NULL,
    browser_ID INT NOT NULL,
    timestamp DATETIME NOT NULL,
    FOREIGN KEY (page_ID) REFERENCES page(page_ID),
    FOREIGN KEY (browser_ID) REFERENCES browser(browser_ID)
);


CREATE TABLE logged_user (
    user_ID INT NOT NULL,
    visit_ID INT NOT NULL,
    PRIMARY KEY (user_ID, visit_ID),
    FOREIGN KEY (user_ID) REFERENCES user(user_ID),
    FOREIGN KEY (visit_ID) REFERENCES visit_tracking(visit_ID)
);

CREATE TABLE incident_status (
	i_status_ID int PRIMARY KEY AUTO_INCREMENT,
	incident_ID int NOT NULL,
	user_ID int NOT NULL,
	timestamp DATETIME NOT NULL,
	FOREIGN KEY (incident_ID) REFERENCES incidents (incidents_ID),
	FOREIGN KEY (user_ID) REFERENCES user (user_ID)
);


CREATE TABLE status (
	status_ID int PRIMARY KEY AUTO_INCREMENT,
	i_status_ID int NOT NULL,
	status VARCHAR(255),
	FOREIGN KEY (i_status_ID) REFERENCES incident_status (i_status_ID)
);

CREATE TABLE comment (
	comment_ID int PRIMARY KEY AUTO_INCREMENT,
	i_status_ID int NOT NULL,
	comment TEXT,
	FOREIGN KEY (i_status_ID) REFERENCES incident_status (i_status_ID)
);

CREATE TABLE evidence (
	evidence_ID int PRIMARY KEY AUTO_INCREMENT,
	i_status_ID int NOT NULL,
	path VARCHAR(255),
	FOREIGN KEY (i_status_ID) REFERENCES incident_status (i_status_ID)
);
